#
# Common Components
#

#
# Account Object?
#Account:
#  type: object
#  properties:
#    code:
#      type: string
#      description: Code of the Account, could be a license or business identifier
#    name:
#      type: string
#      description: Name of the Account.

#
# Company Object
Company:
  $ref: './schema/Company.yaml'


#
#
Company_Type:
  $ref: './schema/Company_Type.yaml'


#
# License
License:
  $ref: './schema/License.yaml'

#
#
License_Type:
  $ref: './schema/License_Type.yaml'


# Contact Object
Contact:
  $ref: './schema/Contact.yaml'


#
#
Contact_Type:
  type: string
  enum:
    - Owner
    - User
    - Employee
    - Driver
    - Vendor
    - Client


#
# Plant Object
Plant:
  type: object
  properties:
    id:
      type: string
      description: Unique Plant Identifier
    name:
      type: string
      description: Free-form Name of the plant, many times just the Variety
    variety:
      type: object
      $ref: '#/components/schemas/Variety'


#
# Plant_Collect Object
Plant_Collect:
  type: object
  properties:
    type:
      type: string
      enum: [ "raw", "net", "wet-plant", "wet-waste", "dry-buds", "dry-trim", "dry-waste" ]
      description: "Material Type: Flower/Wet, Flower/Dry, Trim/Wet|Dry, Waste/Wet|Dry"
    qty:
      type: number
      format: double
    uom:
      type: string
      enum: [ "g", "kg", "oz", "lb" ]
    # plant_list:
    #   type: array

#
# Inventory Object
Lot:
  type: object
  required: [ "id", "name", "product" ]
  properties:
    id:
      type: string
      description: The Inventory Unique Identifier
    name:
      type: string
    product:
      $ref: '#/components/schemas/Product'
    variety:
      $ref: '#/components/schemas/Variety'


#
#
# Package:
#   type: object
#   properties:
#     qty:
#       type: string
#     uom:
#       type: number

#
# A Product
Product:
  type: object
  properties:
    id:
      type: string
      description: The Product Unique Identifer from the CRE
    name:
      type: string
    type:
      $ref: '#/components/schemas/Product_Type'
    package:
      type: object
      properties:
        net_volume:
          type: number
        net_weight:
          type: number
        unit_count:
          type: number
    serving:
      type: object
      properties:
        count:
          type: number
        portion:
          type: object
          properties:
            size:
              type: number
            unit:
              type: string


#
# a product Type
Product_Type:
  $ref: './schema/Product_Type.yaml'


#
#
Lab_Metric:
  $ref: './schema/Lab_Metric.yaml'

#
#
Lab_Sample:
  $ref: './schema/Lab_Sample.yaml'


#
#
Lab_Result:
  $ref: './schema/Lab_Result.yaml'


#
#
Lab_Result_Metric:
  $ref: './schema/Lab_Result_Metric.yaml'


#
#
B2B_Sale:
  description: "A business to business type of transaction, contains one or more line items."
  type: object
  required: [ "id", "type", "source", "target", "item_list" ]
  properties:
    id:
      description: "ULID"
      type: string
    type:
      type: string
      enum: [ "incoming", "outgoing" ]
    source:
      description: "The Source License of the materials, aka: Seller, Sold By"
      type: object
      $ref: '#/components/schemas/License'
    target:
      description: "The Target License of the materials, aka: Buyer, Ship To"
      type: object
      $ref: '#/components/schemas/License'
    depart_at:
      description: Estimate of Departure Time
      type: string
      format: dateTime
    arrive_at:
      description: Estimate of Arrival Time
      type: string
      format: dateTime
    item_list:
      type: array
      items:
        $ref: '#/components/schemas/B2B_Sale_Item'


#
#
B2B_Sale_Item:
  description: "Line item of a B2B Sale"
  type: object
  properties:
    lot:
      type: string
      description: Inventory as String ID or Object
    unit_count:
      type: number
      format: double
      description: Quantity of Items Being Transferred
    unit_price:
      type: number
      format: double
      description: The unit price of the item


#
#
B2C_Sale:
  description: "A business to consumer type transaction with one or more line items"
  type: object
  properties:
    id:
      type: string
      description: The Universal Identifier
    created_at:
      type: string
      format: dateTime

B2C_Sale_Item:
  description: "Line item of a B2C Sale"
  type: object
  properties:
    id:
      type: string
    lot:
      description: Inventory Item Identifier
      type: string
    unit_count:
      description: Quantity of Items Sold
      type: string
    unit_price:
      description: Price per Unit *NOT* the full price
      type: string


Variety:
  $ref: './schema/Variety.yaml'

#
#
Section:
  description: "A logical or physical organizational container aka Area, Room, Zone"
  type: object
  properties:
    id:
      type: string
      description: The Universal Identifier
    name:
      type: string
      description: The Name
    type:
      type: string
      enum: [ "crop", "inventory", "inventory-quarantine" ]
